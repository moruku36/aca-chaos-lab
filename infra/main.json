{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "12331204800074210657"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the environment that can be used as part of naming resource convention"
      }
    },
    "location": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "serviceAppImageName": {
      "type": "string",
      "defaultValue": "mcr.microsoft.com/k8se/quickstart:latest",
      "metadata": {
        "description": "The image name for the app service"
      }
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Principal ID of the user running deployment (for ACR push access)"
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "appContainerApps": "ca-",
      "appManagedEnvironments": "cae-",
      "cacheRedis": "redis-",
      "containerRegistryRegistries": "cr",
      "insightsComponents": "ai-",
      "managedIdentityUserAssignedIdentities": "id-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkPrivateEndpoints": "pe-",
      "networkVirtualNetworks": "vnet-",
      "operationalInsightsWorkspaces": "log-",
      "resourcesResourceGroups": "rg-"
    },
    "abbrs": "[variables('$fxv#0')]",
    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    }
  },
  "resources": {
    "resourceGroup": {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    "managedIdentity": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "managed-identity",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "managedIdentityName": {
            "value": "[format('{0}{1}', variables('abbrs').managedIdentityUserAssignedIdentities, variables('resourceToken'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "7330387774892020842"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "managedIdentityName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2024-11-30",
              "name": "[parameters('managedIdentityName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "managedIdentityId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
            },
            "managedIdentityName": {
              "type": "string",
              "value": "[parameters('managedIdentityName')]"
            },
            "managedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2024-11-30').principalId]"
            },
            "managedIdentityClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2024-11-30').clientId]"
            }
          }
        }
      },
      "dependsOn": [
        "resourceGroup"
      ]
    },
    "monitoring": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "monitoring",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "logAnalyticsName": {
            "value": "[format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))]"
          },
          "applicationInsightsName": {
            "value": "[format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "16610068992443579087"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "logAnalyticsName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            }
          },
          "resources": {
            "logAnalytics": {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2023-09-01",
              "name": "[parameters('logAnalyticsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            "applicationInsights": {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              },
              "dependsOn": [
                "logAnalytics"
              ]
            }
          },
          "outputs": {
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[parameters('logAnalyticsName')]"
            },
            "applicationInsightsConnectionString": {
              "type": "securestring",
              "value": "[reference('applicationInsights').ConnectionString]"
            }
          }
        }
      },
      "dependsOn": [
        "resourceGroup"
      ]
    },
    "network": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "network",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "vnetName": {
            "value": "[format('{0}{1}', variables('abbrs').networkVirtualNetworks, variables('resourceToken'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "3595860130271043799"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "vnetName": {
              "type": "string"
            }
          },
          "variables": {
            "vnetAddressPrefix": "10.0.0.0/16",
            "containerAppsSubnetPrefix": "10.0.1.0/24",
            "privateEndpointSubnetPrefix": "10.0.2.0/24"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2023-05-01",
              "name": "[format('nsg-{0}-chaos', parameters('vnetName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-05-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('vnetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "containerApps",
                    "properties": {
                      "addressPrefix": "[variables('containerAppsSubnetPrefix')]",
                      "delegations": [
                        {
                          "name": "Microsoft.App.environments",
                          "properties": {
                            "serviceName": "Microsoft.App/environments"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "privateEndpoints",
                    "properties": {
                      "addressPrefix": "[variables('privateEndpointSubnetPrefix')]",
                      "privateEndpointNetworkPolicies": "Enabled",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-chaos', parameters('vnetName')))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-chaos', parameters('vnetName')))]"
              ]
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            },
            "containerAppsSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2023-05-01').subnets[0].id]"
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2023-05-01').subnets[1].id]"
            },
            "nsgId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-chaos', parameters('vnetName')))]"
            },
            "nsgName": {
              "type": "string",
              "value": "[format('nsg-{0}-chaos', parameters('vnetName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "resourceGroup"
      ]
    },
    "redis": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "redis",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "redisName": {
            "value": "[format('{0}{1}', variables('abbrs').cacheRedis, variables('resourceToken'))]"
          },
          "vnetId": {
            "value": "[reference('network').outputs.vnetId.value]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference('network').outputs.privateEndpointSubnetId.value]"
          },
          "containerAppPrincipalId": {
            "value": "[reference('managedIdentity').outputs.managedIdentityPrincipalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "1828308622371590560"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "redisName": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "containerAppPrincipalId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.Cache/redisEnterprise",
              "apiVersion": "2024-10-01",
              "name": "[parameters('redisName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Balanced_B0"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "minimumTlsVersion": "1.2"
              }
            },
            {
              "type": "Microsoft.Cache/redisEnterprise/databases",
              "apiVersion": "2024-10-01",
              "name": "[format('{0}/{1}', parameters('redisName'), 'default')]",
              "properties": {
                "clientProtocol": "Encrypted",
                "port": 10000,
                "clusteringPolicy": "OSSCluster",
                "evictionPolicy": "NoEviction",
                "persistence": {
                  "aofEnabled": false,
                  "rdbEnabled": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cache/redisEnterprise', parameters('redisName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2024-06-01",
              "name": "privatelink.redis.azure.net",
              "location": "global",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2024-06-01",
              "name": "[format('{0}/{1}', 'privatelink.redis.azure.net', format('vnetlink-{0}', parameters('redisName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.redis.azure.net')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-05-01",
              "name": "[format('pe-{0}', parameters('redisName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('plsc-{0}', parameters('redisName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Cache/redisEnterprise', parameters('redisName'))]",
                      "groupIds": [
                        "redisEnterprise"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cache/redisEnterprise', parameters('redisName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-05-01",
              "name": "[format('{0}/{1}', format('pe-{0}', parameters('redisName')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "redis-config",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.redis.azure.net')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.redis.azure.net')]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}', parameters('redisName')))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('containerAppPrincipalId')))]",
              "type": "Microsoft.Cache/redisEnterprise/databases/accessPolicyAssignments",
              "apiVersion": "2024-10-01",
              "name": "[format('{0}/{1}/{2}', parameters('redisName'), 'default', 'container-app-assignment')]",
              "properties": {
                "accessPolicyName": "default",
                "user": {
                  "objectId": "[parameters('containerAppPrincipalId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cache/redisEnterprise/databases', parameters('redisName'), 'default')]"
              ]
            }
          ],
          "outputs": {
            "redisId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Cache/redisEnterprise', parameters('redisName'))]"
            },
            "redisHost": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Cache/redisEnterprise', parameters('redisName')), '2024-10-01').hostName]"
            },
            "redisPort": {
              "type": "int",
              "value": 10000
            }
          }
        }
      },
      "dependsOn": [
        "managedIdentity",
        "network",
        "resourceGroup"
      ]
    },
    "containerRegistry": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "container-registry",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "registryName": {
            "value": "[format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))]"
          },
          "vnetId": {
            "value": "[reference('network').outputs.vnetId.value]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference('network').outputs.privateEndpointSubnetId.value]"
          },
          "managedIdentityPrincipalId": {
            "value": "[reference('managedIdentity').outputs.managedIdentityPrincipalId.value]"
          },
          "currentUserPrincipalId": {
            "value": "[parameters('principalId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "6403275340062441532"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "registryName": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "managedIdentityPrincipalId": {
              "type": "string"
            },
            "currentUserPrincipalId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-07-01",
              "name": "[parameters('registryName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Premium"
              },
              "properties": {
                "adminUserEnabled": false,
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('registryName'))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName')), parameters('managedIdentityPrincipalId'), '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
              ]
            },
            {
              "condition": "[not(equals(parameters('currentUserPrincipalId'), ''))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('registryName'))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName')), parameters('currentUserPrincipalId'), '8311e382-0749-4cb8-b61a-304f252e45ec')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '8311e382-0749-4cb8-b61a-304f252e45ec')]",
                "principalId": "[parameters('currentUserPrincipalId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2024-06-01",
              "name": "privatelink.azurecr.io",
              "location": "global",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2024-06-01",
              "name": "[format('{0}/{1}', 'privatelink.azurecr.io', format('vnetlink-{0}', parameters('registryName')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurecr.io')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2024-05-01",
              "name": "[format('pe-{0}', parameters('registryName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('plsc-{0}', parameters('registryName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]",
                      "groupIds": [
                        "registry"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2024-05-01",
              "name": "[format('{0}/{1}', format('pe-{0}', parameters('registryName')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "registry-config",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurecr.io')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurecr.io')]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}', parameters('registryName')))]"
              ]
            }
          ],
          "outputs": {
            "registryId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
            },
            "registryName": {
              "type": "string",
              "value": "[parameters('registryName')]"
            },
            "loginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName')), '2023-07-01').loginServer]"
            }
          }
        }
      },
      "dependsOn": [
        "managedIdentity",
        "network",
        "resourceGroup"
      ]
    },
    "containerAppsEnvironment": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "container-apps-environment",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "environmentName": {
            "value": "[format('{0}{1}', variables('abbrs').appManagedEnvironments, variables('resourceToken'))]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[reference('monitoring').outputs.logAnalyticsWorkspaceName.value]"
          },
          "containerAppsSubnetId": {
            "value": "[reference('network').outputs.containerAppsSubnetId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "417155018412917943"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "environmentName": {
              "type": "string"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string"
            },
            "containerAppsSubnetId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('environmentName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2023-09-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2023-09-01').primarySharedKey]"
                  }
                },
                "vnetConfiguration": {
                  "infrastructureSubnetId": "[parameters('containerAppsSubnetId')]"
                },
                "workloadProfiles": [
                  {
                    "name": "Consumption",
                    "workloadProfileType": "Consumption"
                  }
                ]
              }
            }
          ],
          "outputs": {
            "environmentId": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]"
            },
            "environmentName": {
              "type": "string",
              "value": "[parameters('environmentName')]"
            }
          }
        }
      },
      "dependsOn": [
        "monitoring",
        "network",
        "resourceGroup"
      ]
    },
    "containerApp": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "container-app",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "containerAppName": {
            "value": "[format('{0}app-{1}', variables('abbrs').appContainerApps, variables('resourceToken'))]"
          },
          "containerAppsEnvironmentName": {
            "value": "[reference('containerAppsEnvironment').outputs.environmentName.value]"
          },
          "containerImage": {
            "value": "[parameters('serviceAppImageName')]"
          },
          "redisHost": {
            "value": "[reference('redis').outputs.redisHost.value]"
          },
          "applicationInsightsConnectionString": {
            "value": "[listOutputsWithSecureValues('monitoring', '2022-09-01').applicationInsightsConnectionString]"
          },
          "managedIdentityName": {
            "value": "[reference('managedIdentity').outputs.managedIdentityName.value]"
          },
          "managedIdentityClientId": {
            "value": "[reference('managedIdentity').outputs.managedIdentityClientId.value]"
          },
          "containerRegistryName": {
            "value": "[reference('containerRegistry').outputs.registryName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "10746966180369592084"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "containerAppName": {
              "type": "string"
            },
            "containerAppsEnvironmentName": {
              "type": "string"
            },
            "containerImage": {
              "type": "string"
            },
            "redisHost": {
              "type": "string"
            },
            "applicationInsightsConnectionString": {
              "type": "securestring"
            },
            "managedIdentityName": {
              "type": "string"
            },
            "managedIdentityClientId": {
              "type": "string"
            },
            "containerRegistryName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2025-01-01",
              "name": "[parameters('containerAppName')]",
              "location": "[parameters('location')]",
              "tags": "[union(parameters('tags'), createObject('azd-service-name', 'app'))]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')))]": {}
                }
              },
              "properties": {
                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName'))]",
                "configuration": {
                  "ingress": {
                    "external": true,
                    "targetPort": 8000,
                    "transport": "http"
                  },
                  "registries": [
                    {
                      "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                      "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer]"
                    }
                  ],
                  "secrets": [
                    {
                      "name": "appinsights-connection-string",
                      "value": "[parameters('applicationInsightsConnectionString')]"
                    }
                  ]
                },
                "template": {
                  "containers": [
                    {
                      "name": "app",
                      "image": "[parameters('containerImage')]",
                      "resources": {
                        "cpu": "[json('0.25')]",
                        "memory": "0.5Gi"
                      },
                      "env": [
                        {
                          "name": "REDIS_HOST",
                          "value": "[parameters('redisHost')]"
                        },
                        {
                          "name": "REDIS_PORT",
                          "value": "10000"
                        },
                        {
                          "name": "REDIS_SSL",
                          "value": "true"
                        },
                        {
                          "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                          "secretRef": "appinsights-connection-string"
                        },
                        {
                          "name": "APP_PORT",
                          "value": "8000"
                        },
                        {
                          "name": "LOG_LEVEL",
                          "value": "INFO"
                        },
                        {
                          "name": "AZURE_CLIENT_ID",
                          "value": "[parameters('managedIdentityClientId')]"
                        }
                      ],
                      "probes": [
                        {
                          "type": "Liveness",
                          "httpGet": {
                            "path": "/health",
                            "port": 8000
                          },
                          "initialDelaySeconds": 30,
                          "periodSeconds": 30
                        },
                        {
                          "type": "Readiness",
                          "httpGet": {
                            "path": "/health",
                            "port": 8000
                          },
                          "initialDelaySeconds": 5,
                          "periodSeconds": 10
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1,
                    "rules": [
                      {
                        "name": "cpu-rule",
                        "custom": {
                          "type": "cpu",
                          "metadata": {
                            "type": "Utilization",
                            "value": "70"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          ],
          "outputs": {
            "containerAppName": {
              "type": "string",
              "value": "[parameters('containerAppName')]"
            },
            "containerAppUri": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName')), '2025-01-01').configuration.ingress.fqdn)]"
            }
          }
        }
      },
      "dependsOn": [
        "containerAppsEnvironment",
        "containerRegistry",
        "managedIdentity",
        "monitoring",
        "redis",
        "resourceGroup"
      ]
    },
    "alertRules": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "alert-rules",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "containerAppName": {
            "value": "[reference('containerApp').outputs.containerAppName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "14453005702626709826"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "containerAppName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "[format('{0}-5xx-alerts', parameters('containerAppName'))]",
              "location": "global",
              "tags": "[parameters('tags')]",
              "properties": {
                "description": "Alert when 5xx errors exceed threshold",
                "severity": 2,
                "enabled": true,
                "scopes": [
                  "[resourceId('Microsoft.App/containerApps', parameters('containerAppName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                  "allOf": [
                    {
                      "name": "HTTP5xxErrors",
                      "metricName": "Requests",
                      "metricNamespace": "Microsoft.App/containerApps",
                      "dimensions": [
                        {
                          "name": "StatusCodeCategory",
                          "operator": "Include",
                          "values": [
                            "5xx"
                          ]
                        }
                      ],
                      "operator": "GreaterThan",
                      "threshold": 5,
                      "timeAggregation": "Total",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ]
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.App/containerApps",
                "targetResourceRegion": "[parameters('location')]"
              }
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "[format('{0}-response-time-alerts', parameters('containerAppName'))]",
              "location": "global",
              "tags": "[parameters('tags')]",
              "properties": {
                "description": "Alert when average response time exceeds 5 seconds",
                "severity": 2,
                "enabled": true,
                "scopes": [
                  "[resourceId('Microsoft.App/containerApps', parameters('containerAppName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                  "allOf": [
                    {
                      "name": "HighResponseTime",
                      "metricName": "ResponseTime",
                      "metricNamespace": "Microsoft.App/containerApps",
                      "operator": "GreaterThan",
                      "threshold": 5000,
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ]
                },
                "autoMitigate": true,
                "targetResourceType": "Microsoft.App/containerApps",
                "targetResourceRegion": "[parameters('location')]"
              }
            }
          ],
          "outputs": {
            "alert5xxId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/metricAlerts', format('{0}-5xx-alerts', parameters('containerAppName')))]"
            },
            "alertResponseTimeId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/metricAlerts', format('{0}-response-time-alerts', parameters('containerAppName')))]"
            }
          }
        }
      },
      "dependsOn": [
        "containerApp",
        "resourceGroup"
      ]
    }
  },
  "outputs": {
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_RESOURCE_GROUP": {
      "type": "string",
      "value": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]"
    },
    "AZURE_CONTAINER_APP_NAME": {
      "type": "string",
      "value": "[reference('containerApp').outputs.containerAppName.value]"
    },
    "AZURE_CONTAINER_APP_URI": {
      "type": "string",
      "value": "[reference('containerApp').outputs.containerAppUri.value]"
    },
    "AZURE_MANAGED_IDENTITY_CLIENT_ID": {
      "type": "string",
      "value": "[reference('managedIdentity').outputs.managedIdentityClientId.value]"
    },
    "AZURE_REDIS_HOST": {
      "type": "string",
      "value": "[reference('redis').outputs.redisHost.value]"
    },
    "AZURE_REDIS_PORT": {
      "type": "int",
      "value": "[reference('redis').outputs.redisPort.value]"
    },
    "AZURE_CONTAINER_REGISTRY_NAME": {
      "type": "string",
      "value": "[reference('containerRegistry').outputs.registryName.value]"
    },
    "AZURE_CONTAINER_REGISTRY_LOGIN_SERVER": {
      "type": "string",
      "value": "[reference('containerRegistry').outputs.loginServer.value]"
    },
    "APPLICATIONINSIGHTS_CONNECTION_STRING": {
      "type": "securestring",
      "value": "[listOutputsWithSecureValues('monitoring', '2022-09-01').applicationInsightsConnectionString]"
    },
    "AZURE_ALERT_5XX_ID": {
      "type": "string",
      "value": "[reference('alertRules').outputs.alert5xxId.value]"
    },
    "AZURE_ALERT_RESPONSE_TIME_ID": {
      "type": "string",
      "value": "[reference('alertRules').outputs.alertResponseTimeId.value]"
    }
  }
}